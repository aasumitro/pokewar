// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	httpclient "github.com/aasumitro/pokewar/pkg/httpclient"
	mock "github.com/stretchr/testify/mock"
)

// IHttpClient is an autogenerated mock type for the IHttpClient type
type IHttpClient struct {
	mock.Mock
}

// MakeRequest provides a mock function with given fields: obj
func (_m *IHttpClient) MakeRequest(obj interface{}) error {
	ret := _m.Called(obj)

	var r0 error
	if rf, ok := ret.Get(0).(func(interface{}) error); ok {
		r0 = rf(obj)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewClient provides a mock function with given fields: opts
func (_m *IHttpClient) NewClient(opts ...httpclient.Option) *httpclient.HTTPClient {
	_va := make([]interface{}, len(opts))
	for _i := range opts {
		_va[_i] = opts[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *httpclient.HTTPClient
	if rf, ok := ret.Get(0).(func(...httpclient.Option) *httpclient.HTTPClient); ok {
		r0 = rf(opts...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*httpclient.HTTPClient)
		}
	}

	return r0
}

type mockConstructorTestingTNewIHttpClient interface {
	mock.TestingT
	Cleanup(func())
}

// NewIHttpClient creates a new instance of IHttpClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIHttpClient(t mockConstructorTestingTNewIHttpClient) *IHttpClient {
	mock := &IHttpClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
