// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	battleroyale "github.com/aasumitro/pokewar/pkg/battleroyale"
	mock "github.com/stretchr/testify/mock"
)

// IPlayerAction is an autogenerated mock type for the IPlayerAction type
type IPlayerAction struct {
	mock.Mock
}

// Attack provides a mock function with given fields: other
func (_m *IPlayerAction) Attack(other *battleroyale.Player) battleroyale.Log {
	ret := _m.Called(other)

	var r0 battleroyale.Log
	if rf, ok := ret.Get(0).(func(*battleroyale.Player) battleroyale.Log); ok {
		r0 = rf(other)
	} else {
		r0 = ret.Get(0).(battleroyale.Log)
	}

	return r0
}

// Eliminate provides a mock function with given fields:
func (_m *IPlayerAction) Eliminate() battleroyale.Log {
	ret := _m.Called()

	var r0 battleroyale.Log
	if rf, ok := ret.Get(0).(func() battleroyale.Log); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(battleroyale.Log)
	}

	return r0
}

// UpdateRank provides a mock function with given fields: rank
func (_m *IPlayerAction) UpdateRank(rank int) {
	_m.Called(rank)
}

// UpdateScore provides a mock function with given fields: point
func (_m *IPlayerAction) UpdateScore(point int) {
	_m.Called(point)
}

type mockConstructorTestingTNewIPlayerAction interface {
	mock.TestingT
	Cleanup(func())
}

// NewIPlayerAction creates a new instance of IPlayerAction. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIPlayerAction(t mockConstructorTestingTNewIPlayerAction) *IPlayerAction {
	mock := &IPlayerAction{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
