// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	battleroyale "github.com/aasumitro/pokewar/pkg/battleroyale"
	mock "github.com/stretchr/testify/mock"
)

// IGameAction is an autogenerated mock type for the IGameAction type
type IGameAction struct {
	mock.Mock
}

// Eliminate provides a mock function with given fields: pos
func (_m *IGameAction) Eliminate(pos int) {
	_m.Called(pos)
}

// Moves provides a mock function with given fields:
func (_m *IGameAction) Moves() {
	_m.Called()
}

// Point provides a mock function with given fields:
func (_m *IGameAction) Point() {
	_m.Called()
}

// Rank provides a mock function with given fields:
func (_m *IGameAction) Rank() {
	_m.Called()
}

// Reset provides a mock function with given fields:
func (_m *IGameAction) Reset() {
	_m.Called()
}

// Start provides a mock function with given fields: game, log, eliminated
func (_m *IGameAction) Start(game chan *battleroyale.Game, log chan string, eliminated chan string) {
	_m.Called(game, log, eliminated)
}

type mockConstructorTestingTNewIGameAction interface {
	mock.TestingT
	Cleanup(func())
}

// NewIGameAction creates a new instance of IGameAction. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIGameAction(t mockConstructorTestingTNewIGameAction) *IGameAction {
	mock := &IGameAction{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
